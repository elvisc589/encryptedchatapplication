{"ast":null,"code":"var _jsxFileName = \"/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport CryptoJS from 'crypto-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  const secretKey = \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\";\n  // Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n  const sendMessage = () => {\n    const encryptedMessage = CryptoJS.AES.encrypt(message, secretKey).toString();\n    console.log(encryptedMessage);\n    socket.emit(\"send_message\", {\n      encryptedMessage,\n      room\n    });\n    // Add the sent message to the messages array\n    setMessages([...messages, {\n      text: message,\n      sender: \"Me\"\n    }]);\n    setMessage(\"\"); // Clear the input field after sending\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      console.log(\"Received data:\", data);\n      if (data && data.encryptedMessage) {\n        console.log(\"Encrypted message:\", data.encryptedMessage);\n        try {\n          const decryptedBytes = CryptoJS.AES.decrypt(data.encryptedMessage, secretKey);\n          const decryptedMessage = decryptedBytes.toString(CryptoJS.enc.Utf8);\n          console.log(\"Decrypted message:\", decryptedMessage);\n          // Add the received message to the messages array\n          setMessages([...messages, {\n            text: decryptedMessage,\n            sender: \"Friend\"\n          }]);\n        } catch (error) {\n          console.error(\"Error decrypting message:\", error);\n          // Handle decryption error if needed\n        }\n      } else {\n        console.warn(\"Invalid data received:\", data);\n        // Handle invalid data if needed\n      }\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Room Number...\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \" Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      value: message,\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \" Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat Messages:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.sender, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rM7td+W7AT/2dCoFPzHOIuex5cc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","CryptoJS","jsxDEV","_jsxDEV","socket","connect","App","_s","secretKey","room","setRoom","message","setMessage","messages","setMessages","joinRoom","emit","sendMessage","encryptedMessage","AES","encrypt","toString","console","log","text","sender","on","data","decryptedBytes","decrypt","decryptedMessage","enc","Utf8","error","warn","className","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","msg","index","_c","$RefreshReg$"],"sources":["/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport CryptoJS from 'crypto-js';\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  const secretKey = \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\"\n  // Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    const encryptedMessage = CryptoJS.AES.encrypt(message, secretKey).toString();\n    console.log(encryptedMessage);\n    socket.emit(\"send_message\", { encryptedMessage, room });\n    // Add the sent message to the messages array\n    setMessages([...messages, { text: message, sender: \"Me\" }]);\n    setMessage(\"\"); // Clear the input field after sending\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      console.log(\"Received data:\", data);\n      if (data && data.encryptedMessage) {\n        console.log(\"Encrypted message:\", data.encryptedMessage);\n        try {\n          const decryptedBytes = CryptoJS.AES.decrypt(data.encryptedMessage, secretKey);\n          const decryptedMessage = decryptedBytes.toString(CryptoJS.enc.Utf8);\n          console.log(\"Decrypted message:\", decryptedMessage);\n          // Add the received message to the messages array\n          setMessages([...messages, { text: decryptedMessage, sender: \"Friend\" }]);\n        } catch (error) {\n          console.error(\"Error decrypting message:\", error);\n          // Handle decryption error if needed\n        }\n      } else {\n        console.warn(\"Invalid data received:\", data);\n        // Handle invalid data if needed\n      }\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Room Number...\"\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      />\n      <button onClick={joinRoom}> Join Room</button>\n      <input\n        placeholder=\"Message...\"\n        value={message}\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n      <h1>Chat Messages:</h1>\n      <ul>\n        {messages.map((msg, index) => (\n          <li key={index}>\n            <strong>{msg.sender}: </strong> {msg.text}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}