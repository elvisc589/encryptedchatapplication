{"ast":null,"code":"var _jsxFileName = \"/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport CryptoJS from \"crypto-js\"; // Import CryptoJS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  // Room State\n  const [room, setRoom] = useState(\"\");\n  // Username State\n  const [username, setUsername] = useState(\"\"); // Define username state\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const joinRoom = () => {\n    if (room !== \"\" && username !== \"\") {\n      // Check if both room and username are set\n      socket.emit(\"join_room\", room);\n    }\n  };\n  const sendMessage = () => {\n    // Encrypt message\n    const encryptedMessage = CryptoJS.AES.encrypt(message, \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\").toString();\n    socket.emit(\"send_message\", {\n      text: encryptedMessage,\n      room,\n      username\n    }); // Send `text` instead of `message`\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      // Decrypt received message\n      const decryptedBytes = CryptoJS.AES.decrypt(data.message, \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\");\n      const decryptedMessage = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      setMessageReceived(decryptedMessage);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Room Number...\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Your Username...\" // Add input field for username\n      ,\n      onChange: event => {\n        setUsername(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \" Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \" Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), messageReceived]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H9w7URIK871JNvhrwYTtkbg5h2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","io","CryptoJS","jsxDEV","_jsxDEV","socket","connect","App","_s","room","setRoom","username","setUsername","message","setMessage","messageReceived","setMessageReceived","joinRoom","emit","sendMessage","encryptedMessage","AES","encrypt","toString","text","on","data","decryptedBytes","decrypt","decryptedMessage","enc","Utf8","className","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport io from \"socket.io-client\";\nimport CryptoJS from \"crypto-js\"; // Import CryptoJS\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  // Room State\n  const [room, setRoom] = useState(\"\");\n  // Username State\n  const [username, setUsername] = useState(\"\"); // Define username state\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n\n  const joinRoom = () => {\n    if (room !== \"\" && username !== \"\") { // Check if both room and username are set\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    // Encrypt message\n    const encryptedMessage = CryptoJS.AES.encrypt(message, \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\").toString();\n    socket.emit(\"send_message\", { text: encryptedMessage, room, username }); // Send `text` instead of `message`\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      // Decrypt received message\n      const decryptedBytes = CryptoJS.AES.decrypt(data.message, \"uI2ooxtwHeI6q69PS98fx9SWVGbpQohO\");\n      const decryptedMessage = decryptedBytes.toString(CryptoJS.enc.Utf8);\n      setMessageReceived(decryptedMessage);\n    });\n  }, [socket]);\n\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Room Number...\"\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      />\n      <input\n        placeholder=\"Your Username...\" // Add input field for username\n        onChange={(event) => {\n          setUsername(event.target.value);\n        }}\n      />\n      <button onClick={joinRoom}> Join Room</button>\n      <input\n        placeholder=\"Message...\"\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n      <h1> Message:</h1>\n      {messageReceived}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,QAAQ,MAAM,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAGJ,EAAE,CAACK,OAAO,CAAC,uBAAuB,CAAC;AAElD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC;EACA,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE9C;EACA,MAAM,CAACkB,OAAO,EAAEC,UAAU,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAE1D,MAAMsB,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIR,IAAI,KAAK,EAAE,IAAIE,QAAQ,KAAK,EAAE,EAAE;MAAE;MACpCN,MAAM,CAACa,IAAI,CAAC,WAAW,EAAET,IAAI,CAAC;IAChC;EACF,CAAC;EAED,MAAMU,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA,MAAMC,gBAAgB,GAAGlB,QAAQ,CAACmB,GAAG,CAACC,OAAO,CAACT,OAAO,EAAE,kCAAkC,CAAC,CAACU,QAAQ,CAAC,CAAC;IACrGlB,MAAM,CAACa,IAAI,CAAC,cAAc,EAAE;MAAEM,IAAI,EAAEJ,gBAAgB;MAAEX,IAAI;MAAEE;IAAS,CAAC,CAAC,CAAC,CAAC;EAC3E,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdS,MAAM,CAACoB,EAAE,CAAC,iBAAiB,EAAGC,IAAI,IAAK;MACrC;MACA,MAAMC,cAAc,GAAGzB,QAAQ,CAACmB,GAAG,CAACO,OAAO,CAACF,IAAI,CAACb,OAAO,EAAE,kCAAkC,CAAC;MAC7F,MAAMgB,gBAAgB,GAAGF,cAAc,CAACJ,QAAQ,CAACrB,QAAQ,CAAC4B,GAAG,CAACC,IAAI,CAAC;MACnEf,kBAAkB,CAACa,gBAAgB,CAAC;IACtC,CAAC,CAAC;EACJ,CAAC,EAAE,CAACxB,MAAM,CAAC,CAAC;EAEZ,oBACED,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MACE8B,WAAW,EAAC,gBAAgB;MAC5BC,QAAQ,EAAGC,KAAK,IAAK;QACnB1B,OAAO,CAAC0B,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAC7B;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFtC,OAAA;MACE8B,WAAW,EAAC,kBAAkB,CAAC;MAAA;MAC/BC,QAAQ,EAAGC,KAAK,IAAK;QACnBxB,WAAW,CAACwB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MACjC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFtC,OAAA;MAAQuC,OAAO,EAAE1B,QAAS;MAAAgB,QAAA,EAAC;IAAU;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9CtC,OAAA;MACE8B,WAAW,EAAC,YAAY;MACxBC,QAAQ,EAAGC,KAAK,IAAK;QACnBtB,UAAU,CAACsB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;MAChC;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFtC,OAAA;MAAQuC,OAAO,EAAExB,WAAY;MAAAc,QAAA,EAAC;IAAa;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpDtC,OAAA;MAAA6B,QAAA,EAAI;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjB3B,eAAe;EAAA;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAAClC,EAAA,CAzDQD,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}