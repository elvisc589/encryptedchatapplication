{"ast":null,"code":"const aesjs = require(\"aes-js\");\nconst key = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\nexport const to_Encrypt = text => {\n  const textBytes = aesjs.utils.utf8.toBytes(text);\n  const counter = new aesjs.Counter(5);\n  const aesCtr = new aesjs.ModeOfOperation.ctr(key, counter);\n  const encryptedBytes = aesCtr.encrypt(textBytes);\n  const encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n  return encryptedHex;\n};\nexport const to_Decrypt = (cipher, username) => {\n  if (cipher.startsWith(\"Welcome\")) {\n    return cipher;\n  }\n  if (cipher.startsWith(username)) {\n    return cipher;\n  }\n  const encryptedBytesToDecrypt = aesjs.utils.hex.toBytes(cipher);\n  const counter = new aesjs.Counter(5);\n  const aesCtrDecrypt = new aesjs.ModeOfOperation.ctr(key, counter);\n  const decryptedBytes = aesCtrDecrypt.decrypt(encryptedBytesToDecrypt);\n  const decryptedText = aesjs.utils.utf8.fromBytes(decryptedBytes);\n  return decryptedText;\n};","map":{"version":3,"names":["aesjs","require","key","to_Encrypt","text","textBytes","utils","utf8","toBytes","counter","Counter","aesCtr","ModeOfOperation","ctr","encryptedBytes","encrypt","encryptedHex","hex","fromBytes","to_Decrypt","cipher","username","startsWith","encryptedBytesToDecrypt","aesCtrDecrypt","decryptedBytes","decrypt","decryptedText"],"sources":["/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/aes.js"],"sourcesContent":["const aesjs = require(\"aes-js\");\n\nconst key = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16];\n\nexport const to_Encrypt = (text) => {\n  const textBytes = aesjs.utils.utf8.toBytes(text);\n  const counter = new aesjs.Counter(5);\n  const aesCtr = new aesjs.ModeOfOperation.ctr(key, counter);\n  const encryptedBytes = aesCtr.encrypt(textBytes);\n  const encryptedHex = aesjs.utils.hex.fromBytes(encryptedBytes);\n  return encryptedHex;\n};\n\nexport const to_Decrypt = (cipher, username) => {\n  if (cipher.startsWith(\"Welcome\")) {\n    return cipher;\n  }\n\n  if (cipher.startsWith(username)) {\n    return cipher;\n  }\n\n  const encryptedBytesToDecrypt = aesjs.utils.hex.toBytes(cipher);\n  const counter = new aesjs.Counter(5);\n  const aesCtrDecrypt = new aesjs.ModeOfOperation.ctr(key, counter);\n  const decryptedBytes = aesCtrDecrypt.decrypt(encryptedBytesToDecrypt);\n  const decryptedText = aesjs.utils.utf8.fromBytes(decryptedBytes);\n  return decryptedText;\n};\n"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAE/B,MAAMC,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;AAEnE,OAAO,MAAMC,UAAU,GAAIC,IAAI,IAAK;EAClC,MAAMC,SAAS,GAAGL,KAAK,CAACM,KAAK,CAACC,IAAI,CAACC,OAAO,CAACJ,IAAI,CAAC;EAChD,MAAMK,OAAO,GAAG,IAAIT,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC;EACpC,MAAMC,MAAM,GAAG,IAAIX,KAAK,CAACY,eAAe,CAACC,GAAG,CAACX,GAAG,EAAEO,OAAO,CAAC;EAC1D,MAAMK,cAAc,GAAGH,MAAM,CAACI,OAAO,CAACV,SAAS,CAAC;EAChD,MAAMW,YAAY,GAAGhB,KAAK,CAACM,KAAK,CAACW,GAAG,CAACC,SAAS,CAACJ,cAAc,CAAC;EAC9D,OAAOE,YAAY;AACrB,CAAC;AAED,OAAO,MAAMG,UAAU,GAAGA,CAACC,MAAM,EAAEC,QAAQ,KAAK;EAC9C,IAAID,MAAM,CAACE,UAAU,CAAC,SAAS,CAAC,EAAE;IAChC,OAAOF,MAAM;EACf;EAEA,IAAIA,MAAM,CAACE,UAAU,CAACD,QAAQ,CAAC,EAAE;IAC/B,OAAOD,MAAM;EACf;EAEA,MAAMG,uBAAuB,GAAGvB,KAAK,CAACM,KAAK,CAACW,GAAG,CAACT,OAAO,CAACY,MAAM,CAAC;EAC/D,MAAMX,OAAO,GAAG,IAAIT,KAAK,CAACU,OAAO,CAAC,CAAC,CAAC;EACpC,MAAMc,aAAa,GAAG,IAAIxB,KAAK,CAACY,eAAe,CAACC,GAAG,CAACX,GAAG,EAAEO,OAAO,CAAC;EACjE,MAAMgB,cAAc,GAAGD,aAAa,CAACE,OAAO,CAACH,uBAAuB,CAAC;EACrE,MAAMI,aAAa,GAAG3B,KAAK,CAACM,KAAK,CAACC,IAAI,CAACW,SAAS,CAACO,cAAc,CAAC;EAChE,OAAOE,aAAa;AACtB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}