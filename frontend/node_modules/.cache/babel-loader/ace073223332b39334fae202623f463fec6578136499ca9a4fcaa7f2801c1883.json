{"ast":null,"code":"var _jsxFileName = \"/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:3001\");\nfunction App() {\n  _s();\n  //Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n  const sendMessage = () => {\n    socket.emit(\"send_message\", {\n      message,\n      room\n    });\n  };\n  useEffect(() => {\n    socket.on(\"receive_message\", data => {\n      console.log(\"Received data:\", data); // Check received data\n      if (data && data.encryptedMessage) {\n        console.log(\"Encrypted message:\", data.encryptedMessage); // Check encrypted message\n        try {\n          const decryptedBytes = CryptoJS.AES.decrypt(data.encryptedMessage, secretKey);\n          const decryptedMessage = decryptedBytes.toString(CryptoJS.enc.Utf8);\n          console.log(\"Decrypted message:\", decryptedMessage);\n          setMessageReceived(decryptedMessage);\n        } catch (error) {\n          console.error(\"Error decrypting message:\", error);\n          setMessageReceived(\"Error decrypting message\");\n        }\n      } else {\n        console.warn(\"Invalid data received:\", data);\n        setMessageReceived(\"Invalid data received\");\n      }\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Room Number...\",\n      onChange: event => {\n        setRoom(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinRoom,\n      children: \" Join Room\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Message...\",\n      onChange: event => {\n        setMessage(event.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \" Send Message\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" Message:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), messageReceived]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ZdKt/j8WlpNmwOxrWqm2c6rJW74=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["io","useEffect","useState","jsxDEV","_jsxDEV","socket","connect","App","_s","room","setRoom","message","setMessage","messageReceived","setMessageReceived","joinRoom","emit","sendMessage","on","data","console","log","encryptedMessage","decryptedBytes","CryptoJS","AES","decrypt","secretKey","decryptedMessage","toString","enc","Utf8","error","warn","className","children","placeholder","onChange","event","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport io from \"socket.io-client\";\nimport { useEffect, useState } from \"react\";\n\nconst socket = io.connect(\"http://localhost:3001\");\n\nfunction App() {\n  //Room State\n  const [room, setRoom] = useState(\"\");\n\n  // Messages States\n  const [message, setMessage] = useState(\"\");\n  const [messageReceived, setMessageReceived] = useState(\"\");\n\n  const joinRoom = () => {\n    if (room !== \"\") {\n      socket.emit(\"join_room\", room);\n    }\n  };\n\n  const sendMessage = () => {\n    socket.emit(\"send_message\", { message, room });\n  };\n\n  useEffect(() => {\n    socket.on(\"receive_message\", (data) => {\n      console.log(\"Received data:\", data); // Check received data\n      if (data && data.encryptedMessage) {\n        console.log(\"Encrypted message:\", data.encryptedMessage); // Check encrypted message\n        try {\n          const decryptedBytes = CryptoJS.AES.decrypt(data.encryptedMessage, secretKey);\n          const decryptedMessage = decryptedBytes.toString(CryptoJS.enc.Utf8);\n          console.log(\"Decrypted message:\", decryptedMessage);\n          setMessageReceived(decryptedMessage);\n        } catch (error) {\n          console.error(\"Error decrypting message:\", error);\n          setMessageReceived(\"Error decrypting message\");\n        }\n      } else {\n        console.warn(\"Invalid data received:\", data);\n        setMessageReceived(\"Invalid data received\");\n      }\n    });\n}, [socket]);\n  return (\n    <div className=\"App\">\n      <input\n        placeholder=\"Room Number...\"\n        onChange={(event) => {\n          setRoom(event.target.value);\n        }}\n      />\n      <button onClick={joinRoom}> Join Room</button>\n      <input\n        placeholder=\"Message...\"\n        onChange={(event) => {\n          setMessage(event.target.value);\n        }}\n      />\n      <button onClick={sendMessage}> Send Message</button>\n      <h1> Message:</h1>\n      {messageReceived}\n    </div>\n  );\n}\n\nexport default App"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}