{"ast":null,"code":"var _jsxFileName = \"/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/components/Chatbox.jsx\",\n  _s = $RefreshSig$();\nimport { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport { process } from \"../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chat({\n  username,\n  roomname,\n  socket\n}) {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const dispatch = useDispatch();\n  const dispatchProcess = (encrypt, msg, cipher) => {\n    dispatch(process(encrypt, msg, cipher));\n  };\n  useEffect(() => {\n    socket.on(\"message\", data => {\n      //decypt\n      const ans = to_Decrypt(data.text, data.username);\n      dispatchProcess(false, ans, data.text);\n      console.log(ans);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt here\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(scrollToBottom, [messages]);\n  console.log(messages, \"mess\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-name\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [username, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            fontSize: \"0.7rem\"\n          },\n          children: [\"in \", roomname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [messages.map(i => {\n        if (i.username === username) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: i.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message mess-right\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [i.text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: i.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this);\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"send\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"enter your message\",\n        value: text,\n        onChange: e => setText(e.target.value),\n        onKeyPress: e => {\n          if (e.key === \"Enter\") {\n            sendData();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendData,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Chat, \"5mvMrzYw9NPtaL4PTZPMEMf1yOk=\", false, function () {\n  return [useDispatch];\n});\n_c = Chat;\nexport default Chat;\n\n//as this loads once the user has joined the room.\n// It is the main page where a user can chat with each other using the chatbox.\n\n//In the code above, I took the user’s input and passed it to the action process,\n//and then the data was passed to the aes function for encryption.\n\n//Then the encrypted data was sent to socket.on(\"chat\").\n//Also, if the message is received, it will be passed to the aes function for decryption.\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["to_Decrypt","to_Encrypt","process","React","useState","useEffect","useRef","useDispatch","jsxDEV","_jsxDEV","Chat","username","roomname","socket","_s","text","setText","messages","setMessages","dispatch","dispatchProcess","encrypt","msg","cipher","on","data","ans","console","log","temp","push","userId","sendData","emit","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","className","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","map","i","ref","placeholder","value","onChange","e","target","onKeyPress","key","onClick","_c","$RefreshReg$"],"sources":["/Users/elvischiqui/Desktop/e2e-encrypted-chatapp/frontend/src/components/Chatbox.jsx"],"sourcesContent":["import { to_Decrypt, to_Encrypt } from \"../aes.js\";\nimport { process } from \"../store/action/index\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nfunction Chat({ username, roomname, socket }) {\n  const [text, setText] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const dispatchProcess = (encrypt, msg, cipher) => {\n    dispatch(process(encrypt, msg, cipher));\n  };\n\n  useEffect(() => {\n    socket.on(\"message\", (data) => {\n      //decypt\n      const ans = to_Decrypt(data.text, data.username);\n      dispatchProcess(false, ans, data.text);\n      console.log(ans);\n      let temp = messages;\n      temp.push({\n        userId: data.userId,\n        username: data.username,\n        text: ans,\n      });\n      setMessages([...temp]);\n    });\n  }, [socket]);\n\n  const sendData = () => {\n    if (text !== \"\") {\n      //encrypt here\n      const ans = to_Encrypt(text);\n      socket.emit(\"chat\", ans);\n      setText(\"\");\n    }\n  };\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(scrollToBottom, [messages]);\n\n  console.log(messages, \"mess\");\n\n  return (\n    <div className=\"chat\">\n      <div className=\"user-name\">\n        <h2>\n          {username} <span style={{ fontSize: \"0.7rem\" }}>in {roomname}</span>\n        </h2>\n      </div>\n      <div className=\"chat-message\">\n        {messages.map((i) => {\n          if (i.username === username) {\n            return (\n              <div className=\"message\">\n                <p>{i.text}</p>\n                <span>{i.username}</span>\n              </div>\n            );\n          } else {\n            return (\n              <div className=\"message mess-right\">\n                <p>{i.text} </p>\n                <span>{i.username}</span>\n              </div>\n            );\n          }\n        })}\n        <div ref={messagesEndRef} />\n      </div>\n      <div className=\"send\">\n        <input\n          placeholder=\"enter your message\"\n          value={text}\n          onChange={(e) => setText(e.target.value)}\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              sendData();\n            }\n          }}\n        ></input>\n        <button onClick={sendData}>Send</button>\n      </div>\n    </div>\n  );\n}\nexport default Chat;\n\n//as this loads once the user has joined the room.\n// It is the main page where a user can chat with each other using the chatbox.\n\n//In the code above, I took the user’s input and passed it to the action process,\n//and then the data was passed to the aes function for encryption.\n\n//Then the encrypted data was sent to socket.on(\"chat\").\n//Also, if the message is received, it will be passed to the aes function for decryption."],"mappings":";;AAAA,SAASA,UAAU,EAAEC,UAAU,QAAQ,WAAW;AAClD,SAASC,OAAO,QAAQ,uBAAuB;AAC/C,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,SAASC,IAAIA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAO,CAAC,EAAE;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMe,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,eAAe,GAAGA,CAACC,OAAO,EAAEC,GAAG,EAAEC,MAAM,KAAK;IAChDJ,QAAQ,CAACjB,OAAO,CAACmB,OAAO,EAAEC,GAAG,EAAEC,MAAM,CAAC,CAAC;EACzC,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdQ,MAAM,CAACW,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MAC7B;MACA,MAAMC,GAAG,GAAG1B,UAAU,CAACyB,IAAI,CAACV,IAAI,EAAEU,IAAI,CAACd,QAAQ,CAAC;MAChDS,eAAe,CAAC,KAAK,EAAEM,GAAG,EAAED,IAAI,CAACV,IAAI,CAAC;MACtCY,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;MAChB,IAAIG,IAAI,GAAGZ,QAAQ;MACnBY,IAAI,CAACC,IAAI,CAAC;QACRC,MAAM,EAAEN,IAAI,CAACM,MAAM;QACnBpB,QAAQ,EAAEc,IAAI,CAACd,QAAQ;QACvBI,IAAI,EAAEW;MACR,CAAC,CAAC;MACFR,WAAW,CAAC,CAAC,GAAGW,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC;EACJ,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC;EAEZ,MAAMmB,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIjB,IAAI,KAAK,EAAE,EAAE;MACf;MACA,MAAMW,GAAG,GAAGzB,UAAU,CAACc,IAAI,CAAC;MAC5BF,MAAM,CAACoB,IAAI,CAAC,MAAM,EAAEP,GAAG,CAAC;MACxBV,OAAO,CAAC,EAAE,CAAC;IACb;EACF,CAAC;EACD,MAAMkB,cAAc,GAAG5B,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAM6B,cAAc,GAAGA,CAAA,KAAM;IAC3BD,cAAc,CAACE,OAAO,CAACC,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAC/D,CAAC;EAEDjC,SAAS,CAAC8B,cAAc,EAAE,CAAClB,QAAQ,CAAC,CAAC;EAErCU,OAAO,CAACC,GAAG,CAACX,QAAQ,EAAE,MAAM,CAAC;EAE7B,oBACER,OAAA;IAAK8B,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnB/B,OAAA;MAAK8B,SAAS,EAAC,WAAW;MAAAC,QAAA,eACxB/B,OAAA;QAAA+B,QAAA,GACG7B,QAAQ,EAAC,GAAC,eAAAF,OAAA;UAAMgC,KAAK,EAAE;YAAEC,QAAQ,EAAE;UAAS,CAAE;UAAAF,QAAA,GAAC,KAAG,EAAC5B,QAAQ;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACNrC,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC1BvB,QAAQ,CAAC8B,GAAG,CAAEC,CAAC,IAAK;QACnB,IAAIA,CAAC,CAACrC,QAAQ,KAAKA,QAAQ,EAAE;UAC3B,oBACEF,OAAA;YAAK8B,SAAS,EAAC,SAAS;YAAAC,QAAA,gBACtB/B,OAAA;cAAA+B,QAAA,EAAIQ,CAAC,CAACjC;YAAI;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACfrC,OAAA;cAAA+B,QAAA,EAAOQ,CAAC,CAACrC;YAAQ;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAEV,CAAC,MAAM;UACL,oBACErC,OAAA;YAAK8B,SAAS,EAAC,oBAAoB;YAAAC,QAAA,gBACjC/B,OAAA;cAAA+B,QAAA,GAAIQ,CAAC,CAACjC,IAAI,EAAC,GAAC;YAAA;cAAA4B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG,CAAC,eAChBrC,OAAA;cAAA+B,QAAA,EAAOQ,CAAC,CAACrC;YAAQ;cAAAgC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC;QAEV;MACF,CAAC,CAAC,eACFrC,OAAA;QAAKwC,GAAG,EAAEf;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,eACNrC,OAAA;MAAK8B,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnB/B,OAAA;QACEyC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAEpC,IAAK;QACZqC,QAAQ,EAAGC,CAAC,IAAKrC,OAAO,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACzCI,UAAU,EAAGF,CAAC,IAAK;UACjB,IAAIA,CAAC,CAACG,GAAG,KAAK,OAAO,EAAE;YACrBxB,QAAQ,CAAC,CAAC;UACZ;QACF;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTrC,OAAA;QAAQgD,OAAO,EAAEzB,QAAS;QAAAQ,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChC,EAAA,CAtFQJ,IAAI;EAAA,QAIMH,WAAW;AAAA;AAAAmD,EAAA,GAJrBhD,IAAI;AAuFb,eAAeA,IAAI;;AAEnB;AACA;;AAEA;AACA;;AAEA;AACA;AAAA,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}